{"version":3,"file":"static/js/796.4e107805.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Review/Reviews.module.css?b0fb","components/Review/Reviews.jsx","services/DataFetcher.js","config.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsContainer\":\"Reviews_reviewsContainer__PijFh\",\"sectionTitle\":\"Reviews_sectionTitle__GlVBM\",\"reviewsList\":\"Reviews_reviewsList__tdrx2\",\"reviewCard\":\"Reviews_reviewCard__ew1Ib\",\"reviewHeader\":\"Reviews_reviewHeader__tougu\",\"authorAvatar\":\"Reviews_authorAvatar__0siQy\",\"defaultAvatar\":\"Reviews_defaultAvatar__ACmJF\",\"authorName\":\"Reviews_authorName__PmWW5\",\"reviewText\":\"Reviews_reviewText__8fdwM\",\"reviewDate\":\"Reviews_reviewDate__aoIub\",\"reviewLink\":\"Reviews_reviewLink__JXFG7\"};","import React, { useEffect, useState } from 'react';\nimport styles from './Reviews.module.css';\nimport { useParams } from 'react-router-dom';\nimport DataFetcher from 'services/DataFetcher';\nimport Loader from 'components/Loader/Loader';\n\nfunction Reviews() {\n    const [reviews, setReviews] = useState([])\n    const [isLoaded, setLoaded] = useState(false)\n    const { id } = useParams();\n    const defaultAvatar = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n    useEffect(() => {\n\n        const fetchDataAsync = async () => {\n            try {\n                const dataFetcher = new DataFetcher();\n                const reviewsPromise = await dataFetcher.getMovieReviews(id);\n                if (reviewsPromise.results.length < 1) {\n                    throw new Error()\n                }\n                setReviews(reviewsPromise.results)\n            } catch (error) {\n                setReviews(null)\n                console.log(\"there is no cast data\")\n            }\n            finally {\n                setLoaded(true)\n            }\n        };\n        fetchDataAsync();\n    }, [id]);\n\n    if (!isLoaded) {\n        return (\n            <Loader />\n        )\n    }\n\n    return (\n        <div className={styles.reviewsContainer}>\n\n            {reviews ?\n                <>\n                    <h2 className={styles.sectionTitle}>Reviews</h2>\n                    <div className={styles.reviewsList}>\n                        {reviews.map(review => (\n                            <div className={styles.reviewCard} key={review.id}>\n                                <div className={styles.reviewHeader}>\n                                    {review.author_details.avatar_path ? (\n                                        <img\n                                            className={styles.authorAvatar}\n                                            src={`https://image.tmdb.org/t/p/w200${review.author_details.avatar_path}`}\n                                            alt={`Avatar of ${review.author}`}\n                                        />\n                                    ) : (\n                                        <img\n                                            className={styles.defaultAvatar}\n                                            src={defaultAvatar}\n                                            alt=\"Default Avatar\"\n                                        />\n                                    )}\n                                    <p className={styles.authorName}>{review.author}</p>\n                                </div>\n                                <div className={styles.reviewContent}>\n                                    <p className={styles.reviewText}>{review.content}</p>\n                                    <p className={styles.reviewDate}>Posted on: {review.created_at}</p>\n                                    <a className={styles.reviewLink} href={review.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                        Read more\n                                    </a>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </>\n                : <p>There is no comments</p>}\n        </div>\n    );\n}\n\nexport default Reviews;\n","import { API_KEY } from '../config';\n\nclass DataFetcher {\n  baseApi = 'https://api.themoviedb.org/3';\n\n  fetchData = async path => {\n    try {\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${API_KEY}`,\n        },\n      };\n\n      const response = await fetch(`${this.baseApi}${path}`, options);\n      if (response.status === 401) {\n        //this did happen several times atm, dunno how to handle this ¯\\_(ツ)_/¯\n        alert('token is dead, get a new one');\n      }\n      if (!response.ok) {\n        console.error('Network response was not ok');\n        throw new Error();\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      throw error;\n    }\n  };\n\n  getTrending = async () => {\n    try {\n      const response = await this.fetchData(`/trending/all/day`);\n      return response;\n    } catch (error) {\n      console.log('Got error while fetching trending films');\n      throw error;\n    }\n  };\n\n  getMovieById = async movie_id => {\n    try {\n      const response = await this.fetchData(`/movie/${movie_id}`);\n      return response;\n    } catch (error) {\n      console.log('Got error while fetching film by id');\n      throw error;\n    }\n  };\n\n  getMovieCredits = async movie_id => {\n    try {\n      const response = await this.fetchData(`/movie/${movie_id}/credits`);\n      return response;\n    } catch (error) {\n      console.log('Got error while fetching movie credits');\n      throw error;\n    }\n  };\n\n  getMovieReviews = async movie_id => {\n    try {\n      const response = await this.fetchData(`/movie/${movie_id}/reviews`);\n      return response;\n    } catch (error) {\n      console.log('Got error while fetching movie reviews');\n      throw error;\n    }\n  };\n\n  searchMovie = async (query, page) => {\n    try {\n      const response = await this.fetchData(\n        `/search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`\n      );\n      return response;\n    } catch (error) {\n      console.log('Got error while searching movies');\n    }\n  };\n}\n\nexport default DataFetcher;\n\n//   baseImgPath = 'https://image.tmdb.org/t/p/w500';\n//   defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n","export const API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NGY5YzJkN2JiZDYwOGEwYWRkYWYxNTkwZWE5NTcwOCIsInN1YiI6IjY0ZGNiZjFmYTNiNWU2MDBjNWJiZTVlZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.pFVt-xBGyaA25LC8vKy5gHWaplViaRqkTVfl94kfBSI';\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","reviews","setReviews","isLoaded","setLoaded","id","useParams","useEffect","fetchDataAsync","dataFetcher","DataFetcher","getMovieReviews","reviewsPromise","results","length","Error","console","log","className","styles","map","review","author_details","avatar_path","src","alt","author","content","created_at","href","url","target","rel","Loader","baseApi","fetchData","path","options","method","headers","accept","Authorization","fetch","response","status","alert","ok","error","json","data","getTrending","getMovieById","movie_id","getMovieCredits","searchMovie","query","page","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}