{"version":3,"file":"static/js/415.2c1f2950.chunk.js","mappings":"sNACA,EAAgC,iCAAhC,EAAgF,gCAAhF,EAA6H,8BAA7H,EAAuK,6BAAvK,EAAkN,+BAAlN,EAA6P,6BAA7P,EAAuS,8BAAvS,EAAqV,iCAArV,EAAoY,+BAApY,EAAib,+BAAjb,EAA4d,6B,SCoE5d,MAxDA,YAAuC,IAAlBA,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,MAEzB,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEMC,GAAWC,EAAAA,EAAAA,MAsBjB,OApBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAgBC,SAASC,iBAAiB,OAC5CC,EAAe,EACbC,EAAkB,aACpBD,IACqBH,EAAcK,QAC/BT,GAAa,EAEpB,EAEDI,EAAcM,SAAQ,SAACC,GACfA,EAAIC,SACJJ,IAEAG,EAAIE,iBAAiB,OAAQL,EAEpC,GACJ,GAAE,KAIC,gCACKT,IAAa,SAACe,EAAA,EAAD,KACd,iBAAKC,UAAWhB,EAAYiB,EAAmBA,EAA/C,WACI,eAAID,UAAWC,EAAf,SAAqCnB,KACrC,gBAAKkB,UAAWC,EAAhB,SACKpB,EAAOqB,KAAI,SAAAC,GAAK,OACb,SAAC,KAAD,CAASC,MAAO,CAAEC,KAAMnB,EAASoB,UAA2BC,GAAE,kBAAaJ,EAAMK,IAAjF,UACI,iBAAKR,UAAWC,EAAhB,WACI,gBACID,UAAWC,EACXQ,IAAKN,EAAMO,YAAN,0CAAuDP,EAAMO,aAlC/E,8EAmCaC,IAAKR,EAAMrB,SAEf,iBAAKkB,UAAWC,EAAhB,WACI,eAAID,UAAWC,EAAf,SAAmCE,EAAMrB,SACzC,cAAGkB,UAAWC,EAAd,SAAqCE,EAAMS,YAC3C,eAAGZ,UAAWC,EAAd,2BAAiDE,EAAMU,iBACvD,eAAGb,UAAWC,EAAd,2BAAiDE,EAAMW,uBAXjBX,EAAMK,GAD3C,WAsBpC,C,kHC7BD,UAhCA,WACI,OAA4BzB,EAAAA,EAAAA,UAAS,IAArC,eAAOF,EAAP,KAAekC,EAAf,KACA,GAA8BhC,EAAAA,EAAAA,WAAS,GAAvC,eAAOiC,EAAP,KAAiBC,EAAjB,KAqBA,OApBA7B,EAAAA,EAAAA,YAAU,WAEN,IAAM8B,EAAmB,mCAAG,sGAEdC,EAAc,IAAIC,EAAAA,EAFJ,SAGGD,EAAYE,cAHf,OAGdC,EAHc,OAIpBP,EAAUO,EAASC,SACnBC,QAAQC,IAAIH,GALQ,gDAOpBE,QAAQC,IAAI,iCAPQ,yBAWpBR,GAAU,GAXU,4EAAH,qDAczBC,GAGH,GAAE,IACEF,GAKD,SAAC,IAAD,CAAWlC,MAAO,kBAAmBD,OAAQA,KAJrC,SAAC,IAAD,GAMf,C,uGClCKuC,GAAAA,EAAAA,EAAAA,IAAAA,SAAAA,IAAAA,IAAAA,EAAAA,MAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,KACJM,QAAU,+BAA+B,KAEzCC,UAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAY,WAAMC,GAAN,2FAEFC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OCVrB,yNDIY,SAUeC,MAAM,GAAD,OAAI,EAAKR,SAAT,OAAmBE,GAAQC,GAV/C,UAWgB,OADlBP,EAVE,QAWKa,QAEXC,MAAM,gCAEHd,EAASe,GAfN,sBAgBNb,QAAQc,MAAM,+BACR,IAAIC,MAjBJ,wBAoBWjB,EAASkB,OApBpB,eAoBFC,EApBE,OAqBRjB,QAAQC,IAAI,WAAYgB,GArBhB,kBAsBDA,GAtBC,wCAwBRjB,QAAQc,MAAM,uBAAd,MAxBQ,kHAAZX,GAAY,KA6BZN,aAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAc,6GAEa,EAAKM,UAAL,qBAFb,cAEJL,EAFI,yBAGHA,GAHG,sCAKVE,QAAQC,IAAI,2CALF,mEAUdiB,aAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAe,WAAMC,GAAN,gGAEY,EAAKhB,UAAL,iBAAyBgB,IAFrC,cAELrB,EAFK,yBAGJA,GAHI,sCAKXE,QAAQC,IAAI,uCALD,iHAAfiB,GAAe,KAUfE,gBAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAkB,WAAMD,GAAN,gGAES,EAAKhB,UAAL,iBAAyBgB,EAAzB,aAFT,cAERrB,EAFQ,yBAGPA,GAHO,sCAKdE,QAAQC,IAAI,0CALE,iHAAlBmB,GAAkB,KAUlBC,gBAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAkB,WAAMF,GAAN,gGAES,EAAKhB,UAAL,iBAAyBgB,EAAzB,aAFT,cAERrB,EAFQ,yBAGPA,GAHO,sCAKdE,QAAQC,IAAI,0CALE,iHAAlBoB,GAAkB,KAUlBC,YAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAc,WAAOC,EAAOC,GAAd,gGAEa,EAAKrB,UAAL,8BACEoB,EADF,oDACmDC,IAHhE,cAEJ1B,EAFI,yBAKHA,GALG,gCAOVE,QAAQC,IAAI,oCAPF,8GAAdqB,EAAc,IAYhB,G,sBEtFA,SAASG,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOpB,GAEP,YADAc,EAAOd,EAET,CAEImB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["webpack://react-homework-template/./src/components/TrendingFilms/FilmsList.module.css?2b32","components/TrendingFilms/FilmsList.jsx","pages/Home.jsx","services/DataFetcher.js","config.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"homeContainer\":\"FilmsList_homeContainer__L5z-b\",\"sectionTitle\":\"FilmsList_sectionTitle__0zwPC\",\"moviesList\":\"FilmsList_moviesList__ZbcGq\",\"movieCard\":\"FilmsList_movieCard__wCS7o\",\"moviePoster\":\"FilmsList_moviePoster__AMZw1\",\"movieInfo\":\"FilmsList_movieInfo__OFcUo\",\"movieTitle\":\"FilmsList_movieTitle__Ymodh\",\"movieOverview\":\"FilmsList_movieOverview__muOTu\",\"releaseDate\":\"FilmsList_releaseDate__7NAAN\",\"voteAverage\":\"FilmsList_voteAverage__bt87T\",\"isLoading\":\"FilmsList_isLoading__mGZNj\"};","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport styles from './FilmsList.module.css';\n\nFilmsList.propTypes = {\n    cast: PropTypes.arrayOf(\n        PropTypes.object\n    ).isRequired,\n    title: PropTypes.string.isRequired,\n}\n\nfunction FilmsList({ movies, title }) {\n\n    const [isLoading, setIsLoading] = useState(true);\n    const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n    const location = useLocation()\n\n    useEffect(() => {\n        const imageElements = document.querySelectorAll(\"img\");\n        let imagesLoaded = 0;\n        const handleImageLoad = () => {\n            imagesLoaded++;\n            if (imagesLoaded === imageElements.length) {\n                setIsLoading(false);\n            }\n        };\n\n        imageElements.forEach((img) => {\n            if (img.complete) {\n                handleImageLoad();\n            } else {\n                img.addEventListener(\"load\", handleImageLoad);\n            }\n        });\n    }, []);\n\n\n    return (\n        <>\n            {isLoading && <Loader />}\n            <div className={isLoading ? styles.isLoading : styles.homeContainer}>\n                <h2 className={styles.sectionTitle}>{title}</h2>\n                <div className={styles.moviesList}>\n                    {movies.map(movie => (\n                        <NavLink state={{ from: location.pathname }} key={movie.id} to={`/movies/${movie.id}`}>\n                            <div className={styles.movieCard} >\n                                <img\n                                    className={styles.moviePoster}\n                                    src={movie.poster_path ? `https://image.tmdb.org/t/p/w200/${movie.poster_path}` : defaultImg}\n                                    alt={movie.title}\n                                />\n                                <div className={styles.movieInfo}>\n                                    <h3 className={styles.movieTitle}>{movie.title}</h3>\n                                    <p className={styles.movieOverview}>{movie.overview}</p>\n                                    <p className={styles.releaseDate}>Release Date: {movie.release_date}</p>\n                                    <p className={styles.voteAverage}>Vote Average: {movie.vote_average}</p>\n                                </div>\n                            </div>\n                        </NavLink>\n                    ))}\n                </div>\n            </div>\n        </>\n\n    );\n}\n\nexport default FilmsList;\n","import Loader from 'components/Loader/Loader';\nimport FilmsList from 'components/TrendingFilms/FilmsList';\nimport React, { useEffect } from 'react'\nimport { useState } from 'react';\nimport DataFetcher from 'services/DataFetcher';\n\nfunction Home() {\n    const [movies, setMovies] = useState('')\n    const [isLoaded, setLoaded] = useState(false)\n    useEffect(() => {\n\n        const fetchTrendingMovies = async () => {\n            try {\n                const dataFetcher = new DataFetcher();\n                const response = await dataFetcher.getTrending()\n                setMovies(response.results)\n                console.log(response)\n            } catch (error) {\n                console.log('Error fetching trending films')\n\n            }\n            finally {\n                setLoaded(true)\n            }\n        }\n        fetchTrendingMovies()\n\n\n    }, [])\n    if (!isLoaded) {\n        return (<Loader />)\n    }\n\n    return (\n        <FilmsList title={'Trending movies'} movies={movies} />\n    )\n}\n\nexport default Home","import { API_KEY } from '../config';\n\nclass DataFetcher {\n  baseApi = 'https://api.themoviedb.org/3';\n\n  fetchData = async path => {\n    try {\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${API_KEY}`,\n        },\n      };\n\n      const response = await fetch(`${this.baseApi}${path}`, options);\n      if (response.status === 401) {\n        //this did happen several times atm, dunno how to handle this ¯\\_(ツ)_/¯\n        alert('token is dead, get a new one');\n      }\n      if (!response.ok) {\n        console.error('Network response was not ok');\n        throw new Error();\n      }\n\n      const data = await response.json();\n      console.log('raw data', data);\n      return data;\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      throw error;\n    }\n  };\n\n  getTrending = async () => {\n    try {\n      const response = await this.fetchData(`/trending/all/day`);\n      return response;\n    } catch (error) {\n      console.log('Got error while fetching trending films');\n      throw error;\n    }\n  };\n\n  getMovieById = async movie_id => {\n    try {\n      const response = await this.fetchData(`/movie/${movie_id}`);\n      return response;\n    } catch (error) {\n      console.log('Got error while fetching film by id');\n      throw error;\n    }\n  };\n\n  getMovieCredits = async movie_id => {\n    try {\n      const response = await this.fetchData(`/movie/${movie_id}/credits`);\n      return response;\n    } catch (error) {\n      console.log('Got error while fetching movie credits');\n      throw error;\n    }\n  };\n\n  getMovieReviews = async movie_id => {\n    try {\n      const response = await this.fetchData(`/movie/${movie_id}/reviews`);\n      return response;\n    } catch (error) {\n      console.log('Got error while fetching movie reviews');\n      throw error;\n    }\n  };\n\n  searchMovie = async (query, page) => {\n    try {\n      const response = await this.fetchData(\n        `/search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`\n      );\n      return response;\n    } catch (error) {\n      console.log('Got error while searching movies');\n    }\n  };\n}\n\nexport default DataFetcher;\n\n//   baseImgPath = 'https://image.tmdb.org/t/p/w500';\n//   defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n","export const API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NGY5YzJkN2JiZDYwOGEwYWRkYWYxNTkwZWE5NTcwOCIsInN1YiI6IjY0ZGNiZjFmYTNiNWU2MDBjNWJiZTVlZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.pFVt-xBGyaA25LC8vKy5gHWaplViaRqkTVfl94kfBSI';\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movies","title","useState","isLoading","setIsLoading","location","useLocation","useEffect","imageElements","document","querySelectorAll","imagesLoaded","handleImageLoad","length","forEach","img","complete","addEventListener","Loader","className","styles","map","movie","state","from","pathname","to","id","src","poster_path","alt","overview","release_date","vote_average","setMovies","isLoaded","setLoaded","fetchTrendingMovies","dataFetcher","DataFetcher","getTrending","response","results","console","log","baseApi","fetchData","path","options","method","headers","accept","Authorization","fetch","status","alert","ok","error","Error","json","data","getMovieById","movie_id","getMovieCredits","getMovieReviews","searchMovie","query","page","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}